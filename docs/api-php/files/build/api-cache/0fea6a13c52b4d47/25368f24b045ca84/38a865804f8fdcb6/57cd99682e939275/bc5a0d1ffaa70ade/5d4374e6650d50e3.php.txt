<?php 
/* Cachekey: cache/stash_default/documentation\api\php\cede59de3015a4a3ee4400e418140b8a/ */
/* Type: array */
/* Expiration: 2019-02-20T19:36:57+01:00 */



$loaded = true;
$expiration = 1550687817;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314205;

