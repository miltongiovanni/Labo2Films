<?php 
/* Cachekey: cache/stash_default/documentation\api\php\47ee5475be535d2dd5a12cae80520ced/ */
/* Type: array */
/* Expiration: 2019-02-20T20:06:43+01:00 */



$loaded = true;
$expiration = 1550689603;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314078;

