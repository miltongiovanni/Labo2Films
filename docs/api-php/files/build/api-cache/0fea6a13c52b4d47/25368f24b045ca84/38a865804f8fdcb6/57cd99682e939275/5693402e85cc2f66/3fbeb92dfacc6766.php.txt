<?php 
/* Cachekey: cache/stash_default/documentation\api\php\163a5435ba3bd38d0655ac9d5b8a0673/ */
/* Type: array */
/* Expiration: 2019-02-20T22:16:01+01:00 */



$loaded = true;
$expiration = 1550697361;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314081;

