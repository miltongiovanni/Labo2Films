<?php 
/* Cachekey: cache/stash_default/documentation\api\php\8f98b1a212a2d83d8abdd7005120c962/ */
/* Type: array */
/* Expiration: 2019-02-21T01:41:24+01:00 */



$loaded = true;
$expiration = 1550709684;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313884;

