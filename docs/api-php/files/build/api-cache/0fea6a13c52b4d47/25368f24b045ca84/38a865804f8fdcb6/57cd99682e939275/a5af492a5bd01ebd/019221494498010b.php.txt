<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ab19bb9a9523f7a6da3eea6a7d7b2e5e/ */
/* Type: array */
/* Expiration: 2019-02-21T10:01:36+01:00 */



$loaded = true;
$expiration = 1550739696;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313980;

