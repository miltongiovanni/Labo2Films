<?php 
/* Cachekey: cache/stash_default/documentation\api\php\135a15554589d10443ae2f02e2c7f054/ */
/* Type: array */
/* Expiration: 2019-02-21T06:10:31+01:00 */



$loaded = true;
$expiration = 1550725831;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313984;

