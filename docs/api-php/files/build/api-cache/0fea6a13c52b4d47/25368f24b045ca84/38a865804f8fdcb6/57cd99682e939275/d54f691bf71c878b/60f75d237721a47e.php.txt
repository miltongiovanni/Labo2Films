<?php 
/* Cachekey: cache/stash_default/documentation\api\php\22b5024e6e5ac870e6a76c95ab8cb894/ */
/* Type: array */
/* Expiration: 2019-02-21T10:47:01+01:00 */



$loaded = true;
$expiration = 1550742421;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313982;

