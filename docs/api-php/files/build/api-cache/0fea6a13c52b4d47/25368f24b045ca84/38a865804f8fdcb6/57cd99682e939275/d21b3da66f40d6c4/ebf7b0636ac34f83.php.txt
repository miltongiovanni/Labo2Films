<?php 
/* Cachekey: cache/stash_default/documentation\api\php\7f795c406499fdae752c898982355273/ */
/* Type: array */
/* Expiration: 2019-02-20T18:26:21+01:00 */



$loaded = true;
$expiration = 1550683581;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313882;

