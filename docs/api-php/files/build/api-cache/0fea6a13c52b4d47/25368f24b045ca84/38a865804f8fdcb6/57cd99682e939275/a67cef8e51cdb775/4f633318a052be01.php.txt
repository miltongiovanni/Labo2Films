<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ac9c76191c99bc31b762c2c3cc06b5c4/ */
/* Type: array */
/* Expiration: 2019-02-21T02:26:04+01:00 */



$loaded = true;
$expiration = 1550712364;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313983;

