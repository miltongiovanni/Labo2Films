<?php 
/* Cachekey: cache/stash_default/documentation\api\php\4c8d612e83142ef9df9738b876d5ffeb/ */
/* Type: array */
/* Expiration: 2019-02-21T08:03:44+01:00 */



$loaded = true;
$expiration = 1550732624;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314082;

