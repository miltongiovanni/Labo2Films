<?php 
/* Cachekey: cache/stash_default/documentation\api\php\5d89c4a6a75f39473516cbac87f3da90/ */
/* Type: array */
/* Expiration: 2019-02-20T23:09:32+01:00 */



$loaded = true;
$expiration = 1550700572;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314079;

