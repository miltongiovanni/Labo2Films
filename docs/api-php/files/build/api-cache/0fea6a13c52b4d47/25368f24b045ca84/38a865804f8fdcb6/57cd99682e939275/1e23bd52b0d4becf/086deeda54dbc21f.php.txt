<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0e0e178f761a060ee777ab0df6302895/ */
/* Type: array */
/* Expiration: 2019-02-20T21:12:37+01:00 */



$loaded = true;
$expiration = 1550693557;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313984;

