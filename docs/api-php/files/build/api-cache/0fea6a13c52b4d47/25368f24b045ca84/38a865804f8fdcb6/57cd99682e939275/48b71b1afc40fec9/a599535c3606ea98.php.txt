<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d7eba2a8a80653a0b425475f930937e5/ */
/* Type: array */
/* Expiration: 2019-02-21T11:27:06+01:00 */



$loaded = true;
$expiration = 1550744826;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313884;

