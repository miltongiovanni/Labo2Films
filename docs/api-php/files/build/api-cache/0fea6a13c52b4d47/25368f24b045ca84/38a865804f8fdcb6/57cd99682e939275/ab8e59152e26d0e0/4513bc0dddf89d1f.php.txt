<?php 
/* Cachekey: cache/stash_default/documentation\api\php\bb3cdde1029b1ade75cd75d02574aa39/ */
/* Type: array */
/* Expiration: 2019-02-21T01:24:52+01:00 */



$loaded = true;
$expiration = 1550708692;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550313984;

