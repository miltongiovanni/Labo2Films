<?php 
/* Cachekey: cache/stash_default/documentation\api\php\06b8358446c3534c685261b762ca194f/ */
/* Type: array */
/* Expiration: 2019-02-21T08:12:15+01:00 */



$loaded = true;
$expiration = 1550733135;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550314206;

