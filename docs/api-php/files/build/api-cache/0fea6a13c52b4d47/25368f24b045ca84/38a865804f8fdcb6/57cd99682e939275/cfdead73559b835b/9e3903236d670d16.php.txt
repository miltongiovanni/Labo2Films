<?php 
/* Cachekey: cache/stash_default/documentation\api\php\971290766d61ab28f7796102453d6fa9/ */
/* Type: array */
/* Expiration: 2019-02-23T15:40:19+01:00 */



$loaded = true;
$expiration = 1550932819;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1550516380;

